<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>Liberdus Contributor Docs</title>
      <link>https://http://liberdus.com/docs-contrib</link>
      <description>Last 10 notes on Liberdus Contributor Docs</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>accounts</title>
    <link>https://http://liberdus.com/docs-contrib/liberdus/accounts</link>
    <guid>https://http://liberdus.com/docs-contrib/liberdus/accounts</guid>
    <description>accounts.md This document details the account types used in the Liberdus system. 1. UserAccount Description: Represents a userâ€™s account. Structure: { &quot;id&quot;: string, &quot;type&quot;: &quot;UserAccount&quot;, &quot;data&quot;: { &quot;balance&quot;: bigint, &quot;toll&quot;: bigint | null, &quot;chats&quot;: object, &quot;friends&quot;: object, &quot;stake&quot;: bigint | null, &quot;remove_stake_request&quot;: number | null, &quot;payments&quot;: DeveloperPayment[] }, &quot;alias&quot;: string | null, &quot;emailHash&quot;: string | null, &quot;verified&quot;: boolean | string, &quot;lastMaintenance&quot;: number, &quot;claimedSnapshot&quot;: boolean, &quot;timestamp&quot;: number, &quot;hash&quot;: string, &quot;operatorAccountInfo&quot;: OperatorAccountInfo | null, // For operator accounts &quot;publicKey&quot;: string } Fields: id: Account ID (32-byte hexadecimal string).</description>
    <pubDate>Wed, 08 Jan 2025 06:40:51 GMT</pubDate>
  </item><item>
    <title>transactions</title>
    <link>https://http://liberdus.com/docs-contrib/liberdus/transactions</link>
    <guid>https://http://liberdus.com/docs-contrib/liberdus/transactions</guid>
    <description>This document details all transaction types in the Liberdus codebase, outlining their structure, data types, and validation rules. All amounts are represented as bigint, and from and to fields represent 32-byte hexadecimal addresses.</description>
    <pubDate>Wed, 08 Jan 2025 06:40:51 GMT</pubDate>
  </item><item>
    <title>api</title>
    <link>https://http://liberdus.com/docs-contrib/rpc/api</link>
    <guid>https://http://liberdus.com/docs-contrib/rpc/api</guid>
    <description>Liberdus RPC Documentation This document describes the available RPC methods for interacting with the Liberdus backend. These methods allow developers to perform operations such as sending transactions, retrieving transaction receipts, managing subscriptions, and more.</description>
    <pubDate>Wed, 08 Jan 2025 06:40:51 GMT</pubDate>
  </item><item>
    <title>rpc</title>
    <link>https://http://liberdus.com/docs-contrib/rpc/rpc</link>
    <guid>https://http://liberdus.com/docs-contrib/rpc/rpc</guid>
    <description>RPC Overview Liberdus rpc provided RPC-ed interface for interacting with liberdus network for clients. The primary role of rpc is to distribute traffic accorss all the consensor.</description>
    <pubDate>Wed, 08 Jan 2025 06:40:51 GMT</pubDate>
  </item><item>
    <title>getting_started</title>
    <link>https://http://liberdus.com/docs-contrib/getting_started</link>
    <guid>https://http://liberdus.com/docs-contrib/getting_started</guid>
    <description>Overview During the time contributing to the liberdus project, creating a local network is a great way to test your changes and see how they affect the network ...</description>
    <pubDate>Wed, 08 Jan 2025 06:40:51 GMT</pubDate>
  </item><item>
    <title>index</title>
    <link>https://http://liberdus.com/docs-contrib/</link>
    <guid>https://http://liberdus.com/docs-contrib/</guid>
    <description>Welcome contributors! This documentation site is dedicated for contributing changes to liberdus network tech stack itself. Here are some useful links to get you started: Getting Started RPC .</description>
    <pubDate>Wed, 08 Jan 2025 06:40:51 GMT</pubDate>
  </item>
    </channel>
  </rss>